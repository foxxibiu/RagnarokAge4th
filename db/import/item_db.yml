# This file is a part of rAthena.
#   Copyright(C) 2021 rAthena Development Team
#   https://rathena.org - https://github.com/rathena
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
###########################################################################
# Item Database
###########################################################################
#
# Item Settings
#
###########################################################################
# - Id                      Item ID.
#   AegisName               Server name to reference the item in scripts and lookups, should use no spaces.
#   Name                    Name in English for displaying as output.
#   Type                    Item type. (Default: Etc)
#   SubType                 Weapon, Ammo or Card type. (Default: 0)
#   Buy                     Buying price. When not specified, becomes double the sell price. (Default: 0)
#   Sell                    Selling price. When not specified, becomes half the buy price. (Default: 0)
#   Weight                  Item weight. Each 10 is 1 weight. (Default: 0)
#   Attack                  Weapon's attack. (Default: 0)
#   MagicAttack             Weapon's magic attack. (Default: 0)
#   Defense                 Armor's defense. (Default: 0)
#   Range                   Weapon's attack range. (Default: 0)
#   Slots                   Available slots in item. (Default: 0)
#   Jobs                    Jobs that can equip the item. (Map default is 'All: true')
#   Classes                 Upper class types that can equip the item. (Map default is 'All: true')
#   Gender                  Gender that can equip the item. (Default: Both)
#   Locations               Equipment's placement. (Default: None)
#   WeaponLevel             Weapon level. (Default: 1 for Weapons)
#   ArmorLevel              Armor level. (Default: 1 for Armors)
#   EquipLevelMin           Minimum required level to equip. (Default: 0)
#   EquipLevelMax           Maximum level that can equip. (Default: 0)
#   Refineable              If the item can be refined. (Default: false)
#   Gradable                If the item can be graded. (Default: false)
#   View                    View sprite of an item. (Default: 0)
#   AliasName               Another item's AegisName that will be sent to the client instead of this item's AegisName. (Default: null)
#   Flags:                  Item flags. (Default: null)
#     BuyingStore           If the item is available for Buyingstores. (Default: false)
#     DeadBranch            If the item is a Dead Branch. (Default: false)
#     Container             If the item is part of a container. (Default: false)
#     UniqueId              If the item is a unique stack. (Default: false)
#     BindOnEquip           If the item is bound to the character upon equipping. (Default: false)
#     DropAnnounce          If the item has a special announcement to self on drop. (Default: false)
#     NoConsume             If the item is consumed on use. (Default: false)
#     DropEffect            If the item has a special effect on the ground when dropped by a monster. (Default: None)
#   Delay:                  Item use delay. (Default: null)
#     Duration              Duration of delay in seconds.
#     Status                Status Change used to track delay. (Default: None)
#   Stack:                  Item stack amount. (Default: null)
#     Amount                Maximum amount that can be stacked.
#     Inventory             If the stack is applied to player's inventory. (Default: true)
#     Cart                  If the stack is applied to the player's cart. (Default: false)
#     Storage               If the stack is applied to the player's storage. (Default: false)
#     GuildStorage          If the stack is applied to the player's guild storage. (Default: false)
#   NoUse:                  Conditions when the item is unusable. (Default: null)
#     Override              Group level to override these conditions. (Default: 100)
#     Sitting               If the item can not be used while sitting. (Default: false)
#   Trade:                  Trade restrictions. (Default: null)
#     Override              Group level to override these conditions. (Default: 100)
#     NoDrop                If the item can not be dropped. (Default: false)
#     NoTrade               If the item can not be traded. (Default: false)
#     TradePartner          If the item can not be traded to the player's partner. (Default: false)
#     NoSell                If the item can not be sold. (Default: false)
#     NoCart                If the item can not be put in a cart. (Default: false)
#     NoStorage             If the item can not be put in a storage. (Default: false)
#     NoGuildStorage        If the item can not be put in a guild storage. (Default: false)
#     NoMail                If the item can not be put in a mail. (Default: false)
#     NoAuction             If the item can not be put in an auction. (Default: false)
#   Script                  Script to execute when the item is used/equipped. (Default: null)
#   EquipScript             Script to execute when the item is equipped. (Default: null)
#   UnEquipScript           Script to execute when the item is unequipped or when a rental item expires. (Default: null)
###########################################################################

Header:
  Type: ITEM_DB
  Version: 3

Body:
  - Id: 100626   # GrayWolf_7_Ticket
    Script: |
      laphine_upgrade();
  - Id: 100627   # GrayWolf_9_Ticket
    Script: |
      laphine_upgrade();
  - Id: 100650   # Pontifex_Courage
    Script: |
      laphine_upgrade();
  - Id: 100651   # Pontifex_Wisdom
    Script: |
      laphine_upgrade();
  - Id: 100652   # Pontifex_Tenacity
    Script: |
      laphine_upgrade();
  - Id: 100653   # Pontifex_Belief
    Script: |
      laphine_upgrade();
  - Id: 100655
    AegisName: Blue_Prints_Scroll
    Name: Cleansing Blueprint Bundle
    Type: Usable
    Weight: 10
    Flags:
      BuyingStore: true
    Script: |
      /* todo */
      getitem rand(1000475,1000500),3;
#BG EXTENDED
  - Id: 8965
    AegisName: Blue_Skull
    Name: Blue Skull
    Type: Etc
    Weight: 0
  - Id: 8966
    AegisName: Red_Skull
    Name: Red Skull
    Type: Etc
    Weight: 0
  - Id: 41001
    AegisName: Ticket_Vip_Master1
    Name: VIP Premium 1 Dias
    Type: Delayconsume
    Buy: 60
    Weight: 10
    Script: |
      if (getgroupid() == 5 ){ dispbottom "Você já é usuário VIP PREMIUM espere acabar para usar novamente."; end;} vip_time(60*24); dispbottom "Parabéns, Você adquiriu 1 Dia VIP PREMIUM, faça logoff para ativar."; delitem 41002,1;      
  - Id: 41002
    AegisName: Ticket_Vip_Master7
    Name: VIP Premium 7 Dias
    Type: Delayconsume
    Buy: 60
    Weight: 10
    Script: |
      if (getgroupid() == 5 ){ dispbottom "Você já é usuário VIP PREMIUM espere acabar para usar novamente."; end;} vip_time(60*24*7); dispbottom "Parabéns, Você adquiriu 7 Dias VIP PREMIUM, faça logoff para ativar."; delitem 41002,1;
  - Id: 41003
    AegisName: Ticket_Vip_Master15
    Name: VIP Premium 15 Dias
    Type: Delayconsume
    Buy: 60
    Weight: 10
    Script: |
      if (getgroupid() == 5 ){ dispbottom "Você já é um usuário VIP PREMIUM espere acabar para usar novamente."; end;} vip_time(60*24*15); dispbottom "Parabéns, Você adquiriu 15 dias VIP, faça logoff para ativar."; delitem 41003,1;
  - Id: 41004
    AegisName: Ticket_Vip_Master30
    Name: VIP Premium 30 Dias
    Type: Delayconsume
    Buy: 60
    Weight: 10
    Script: |
      if (getgroupid() == 5 ){ dispbottom "Você já é usuário VIP PREMIUM espere acabar para usar novamente."; end;} vip_time(60*24*30); dispbottom "Parabéns, Você adquiriu 30 dias VIP PREMIUM, faça logoff para ativar."; delitem 41004,1;
  - Id: 41005
    AegisName: Ticket_Vip_Plus1
    Name: VIP Premium 1 Dias
    Type: Delayconsume
    Buy: 60
    Weight: 10
    Script: |
       if (getgroupid() == 5 ){ dispbottom "Você já � usuario VIP PREMIUM espere acabar para usar novamente."; end;} vip_time(60*24); dispbottom "Parabéns, Você adquiriu 1 dia VIP PREMIUM, faça logoff para ativar."; delitem 41005,1;
  - Id: 41007
    AegisName: 1000CP_TIX
    Name: 1000 Cash Points Coin
    Type: Healing
    Buy: 50
    Weight: 1
    Script: |
      set #CASHPOINTS,#CASHPOINTS+1000; dispbottom "Voce acaba de adquirir [1000 Cash Points]!";
  - Id: 41008
    AegisName: 5000CP_TIX
    Name: 5000 Cash Points Coin
    Type: Healing
    Buy: 50
    Weight: 1
    Script: |
      set #CASHPOINTS,#CASHPOINTS+5000; dispbottom "Voce acaba de adquirir [5000 Cash Points]!";
  - Id: 41009
    AegisName: 10000CP_TIX
    Name: 10000 Cash Points Coin
    Type: Healing
    Buy: 50
    Weight: 1
    Script: |
      set #CASHPOINTS,#CASHPOINTS+10000; dispbottom "Voce acaba de adquirir [10000 Cash Points]!";
  - Id: 41010
    AegisName: 50000CP_TIX
    Name: 50000 Cash Points Coin
    Type: Healing
    Buy: 50
    Weight: 1
    Script: |
      set #CASHPOINTS,#CASHPOINTS+50000; dispbottom "Voce acaba de adquirir [50000 Cash Points]!";
#CELINE#