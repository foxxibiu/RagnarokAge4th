//===== rAthena Script =======================================
//= Card Trader
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.1 
//===== Compatible With: =====================================
//= rAthena SVN
//===== Description: =========================================
//= Exchange cards for points.
//============================================================
//===== rAthena Script =======================================
//= Card Trader
//===== By: ==================================================
//= Euphy
//===== Current Version: =====================================
//= 1.1 
//===== Compatible With: =====================================
//= rAthena SVN
//===== Description: =========================================
//= Exchange cards for points.
//============================================================
s_room,30,47,6	script	Colecionador de Cartas	4_EP17_NIHIL_K,{
	cutin "ep171_nihil02",2;
	mes "^339966[Colecionador]^000000";
	mes (gettime(3)>= 6&&gettime(3)<= 12?"Bom-dia":(gettime(3)>=13&&gettime(3)<=18?"Boa-tarde":"Boa-noite"))+", ^008aff"+strcharinfo(0)+"^000000 !";
	mes "O que posso fazer por você?";
	next;
	switch(select("^339966[»]^000000 Informação:^339966[»]^000000 Vender Cartas:^339966[»]^000000 Loja (^0055FF"+getd(.Points$)+"^000000):^ff0000[»]^000000 Sair")) {
	case 1:
		mes "^339966[Colecionador]^000000";
		mes "Por acaso você possui";
		mes "alguma carta inutil que você não esteja usando?";
		mes "Se quiser me vender eu";
		mes "ficarei feliz em comprá-las de você!";
		next;
		mes "^339966[Colecionador]^000000";
		mes "Vou te dar ^0055FF"+.Points[0]+" Ponto"+((.Points[0] == 1)?"":"s")+"^000000 por cada";
		mes "carta normal que você tiver, e";
		mes "^0055FF"+.Points[1]+" Pontos^000000 por cada carta MVP.";
		mes "Você poderá trocar esses pontos";
		mes "por itens em nossa loja.";
		mes "O que você acha disso?";
		emotion ET_MONEY;
		close;
	case 2:
		mes "^339966[Colecionador]^000000";
		mes "Escolha as cartas que";
		mes "você irá me vender.";
		if (.Level) {
			mes " ";
			mes "Elas devem ser dropadas";
			mes "por monstros de level";
			mes .Level+" ou superior.";
		}
		deletearray @sold_nameid[0],getarraysize(@sold_nameid);
		callshop "card_shop",2;
		npcshopattach "card_shop";
		end;
	case 3:
		mes "^339966[Colecionador]^000000";
		mes "Você possui ^0055FF"+getd(.Points$)+"^000000 Ponto"+((getd(.Points$) == 1)?".":"s.");
		callshop "LojaCartas";
		end;
	case 4:
		mes "^339966[Colecionador]^000000";
		mes "*yawn*";
		mes "Até mais!";
		emotion ET_SLEEPY;
		close;		
	}

OnSellItem:
	mes "Cartas para a venda:";
	mes "-----------------------------------";
	for(set .@i,0; .@i<getarraysize(@sold_nameid); set .@i,.@i+1)
		if (@sold_nameid[.@i] > 4000 && @sold_nameid[.@i] < 4700) {
			if (.Level) {
				query_sql("SELECT `LV` FROM `mob_db` WHERE `DropCardid` = "+@sold_nameid[.@i],.@lv);
				if (.@lv < .Level) {
					dispbottom getitemname(@sold_nameid[.@i])+" é abaixo do level minimo.";
					continue;
				}
			}
			set .@card_id[getarraysize(.@card_id)], @sold_nameid[.@i];
			set .@card_amt[getarraysize(.@card_amt)], @sold_quantity[.@i];
			set .@mvp, compare(.MVP$,""+@sold_nameid[.@i]);
			mes ((.@mvp)?"  ^FF0000":"  ^777777")+@sold_quantity[.@i]+"x "+getitemname(@sold_nameid[.@i])+"^000000";
			set .@card_total, .@card_total+(@sold_quantity[.@i]*((.@mvp)?.Points[1]:.Points[0]));
		}
	deletearray @sold_nameid[0], getarraysize(@sold_nameid);
	deletearray @sold_quantity[0], getarraysize(@sold_quantity);
	if (!.@card_id) {
		mes "  ^777777(vazio)^000000";
		emotion ET_SWEAT;
		close;
	}
	mes " ";
	mes "---------- Total: ^0055FF"+.@card_total+" pt.^000000 -------";
	next;
	if(select("^339966[»]^000000 Completar Negociação:^ff0000[»]^000000 Cancelar") == 2) {
		mes "^339966[Colecionador]^000000";
		mes "Oh, okay...";
		emotion ET_SCRATCH;
		close;
	}
	for(set .@i,0; .@i<getarraysize(.@card_id); set .@i,.@i+1)
		delitem .@card_id[.@i],.@card_amt[.@i];
	setd .Points$, getd(.Points$)+.@card_total;
	mes "^339966[Colecionador]^000000";
	mes "Blza, tudo certo!";
	emotion ET_DELIGHT;
	close;
OnBuyItem:
	for(set .@i,0; .@i<getarraysize(@bought_nameid); set .@i,.@i+1)
		for(set .@j,0; .@j<getarraysize(.Shop); set .@j,.@j+2)
			if (@bought_nameid[.@i] == .Shop[.@j]) {
				set .@cost, .@cost+(.Shop[.@j+1]*@bought_quantity[.@i]);
				break;
			}
	if (.@cost > getd(.Points$)) {
		mes "^339966[Colecionador]^000000";
		mes "Você não possui pontos suficientes.";
		emotion ET_HUK;
	}
	else {
		mes "Lista de compras:";
		mes "-----------------------------------";
		for(set .@i,0; .@i<getarraysize(@bought_nameid); set .@i,.@i+1) {
			getitem @bought_nameid[.@i], @bought_quantity[.@i];
			mes "  ^777777"+@bought_quantity[.@i]+"x "+getitemname(@bought_nameid[.@i])+"^000000";
		}
		mes " ";
		mes "---------- Total: ^0055FF"+.@cost+" pt.^000000 -------";
		setd .Points$, getd(.Points$)-.@cost;
		emotion ET_MONEY;
	}
	deletearray @bought_nameid[0], getarraysize(@bought_nameid);
	deletearray @bought_quantity[0], getarraysize(@bought_quantity);
	close;
OnInit:

	set .Level,0;   		// Minimum monster level to trade corresponding cards.
	set .Points$,"#Card_Points";	// Variable to store points.
	setarray .Shop[0],		// Card Shop items: <ID>,<point cost>
	  607,1;
	setarray .Points[0],1,50;	// Points per <normal card>,<MVP card>
	set .MVP$,			// List of MVP cards.
	"4357,4359,4361,4363,4367,4365,4425,4372,4147,4145,4592,4565,4563,4561,4562,4564,4560,4566,4574,4376,4168,"+
	"4386,4142,4134,4137,4123,4330,4441,4318,4324,4576,4408,4509,4128,4430,4263,4580,4403,4525,4305,4407,4419,4520,"+
	"4276,4146,4132,4131,4456,4457,4451,4652,4143,4135,4144,4148,4121,4578,4507,4603,4342,4174,4302,4399,4374,4352,4047,4054";
	
	npcshopdelitem "card_shop",909;
	for(set .@i,0; .@i<getarraysize(.Shop); set .@i,.@i+2)
		npcshopadditem "card_shop",.Shop[.@i],.Shop[.@i+1];
	end;
}
-	shop	card_shop	-1,909:-1
-	pointshop	LojaCartas	-1,#Card_Points,616:5,12246:2000,4140:10,4105:10,4058:10,4064:10,4133:10,4035:10,4031:10,4089:10,4097:10,4107:10,4141:10,4092:10,4100:10
//vip_lounge,146,126,3	duplicate(Card Trader_P)	Trocar Cartas#1	4_ep16_nihil