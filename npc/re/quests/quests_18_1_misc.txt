//===== rAthena Script =======================================
//= Direction of Prayer
//===== Description: =========================================
//= [Walkthrough Conversion]
//--- Others NPCs related to Episode 18.1
//===== Changelogs: ==========================================
//= 1.0 First version. [Capuche]
//============================================================

oz_dun01,284,164,3	script	Rope#to_ra_fild10	4_ROPEPILE,{ 
	if (ep18_1_main >= 31) {
		mes "I think I can climb up with a rope.";
		next;
		switch( select( "Use a rope to climb", "Do not use" ) ) {
		case 1:
			close2;
			warp "ra_fild10",173,176;
			end;
		case 2:
			emotion ET_THINK, playerattached();
			end;
		}
	}
	end;

OnInit:
	questinfo( QTYPE_CLICKME, QMARK_YELLOW, "isbegin_quest(11720) == 2" );
	end;
}

oz_dun01,28,190,3	script	Rope#to_gw_fild01	4_ROPEPILE,{
	if (ep18_1_main >= 31) {
		mes "I think I can climb up with a rope.";
		next;
		switch( select( "Use a rope to climb", "Do not use" ) ) {
		case 1:
			close2;
			warp "gw_fild01",275,337;
			end;
		case 2:
			emotion ET_THINK, playerattached();
			end;
		}
		close;
	}
	end;

OnInit:
	questinfo( QTYPE_CLICKME, QMARK_YELLOW, "isbegin_quest(11720) == 2" );
	end;
}


gw_fild01,279,335,3	script	Rope#to_oz_dun01	4_ROPEPILE,{
	if (ep18_1_main >= 31) {
		mes "Under the fissures in the rock you can see an underground cavern.";
		mes "I think you can use a rope to get into a crevice.";
		next;
		switch( select( "Use a rope to go down", "Do not use" ) ) {
		case 1:
			close2;
			warp "oz_dun01",27,188;
			end;
		case 2:
			emotion ET_THINK, playerattached();
			end;
		}
	}
	end;

OnInit:
	questinfo( QTYPE_CLICKME, QMARK_YELLOW, "isbegin_quest(11720) > 0" );
	end;
}

ra_fild10,175,179,3	script	Rope#to_oz_dun01_	4_ROPEPILE,{
	if (ep18_1_main >= 31) {
		mes "Under the fissures in the rock you can see an underground cavern.";
		mes "I think you can use a rope to get into a crevice.";
		next;
		switch( select( "Use a rope to go down", "Do not use" ) ) {
		case 1:
			close2;
			warp "oz_dun01",284,167;
			end;
		case 2:
			emotion ET_THINK, playerattached();
			end;
		}
	}
	end;

OnInit:
	questinfo( QTYPE_CLICKME, QMARK_YELLOW, "isbegin_quest(11720) > 0" );
	end;
}



//-------------------------------------------------------------------
// Other NPCs
//-------------------------------------------------------------------

gw_fild01,396,269,3	script	Old milestone#ep18	2_BOARD2,{
	mes "Only traces of a broken bridge over the cliff are visible.";
	mes "This path is not currently in use.";
	close;
}

wolfvill,90,261,6	script	Shale#E18_D7	4_F_RUSWOMAN1,{
	mes "[Shale]";
	mes "I came to a place where there was no one because it was frustrating, but there is also someone here.";
	close;
}

wolfvill,269,68,4	duplicate(dummy_npc)	Vendor#E18_D8	4_F_RUSWOMAN2

wolfvill,167,253,1	duplicate(dummy_npc)	Building materials#hms01	4_WOODBOX
wolfvill,166,252,1	duplicate(dummy_npc)	Building materials#hms02	4_WOODBOX
wolfvill,165,254,1	duplicate(dummy_npc)	Building materials#hms03	4_ROPEPILE
wolfvill,165,250,1	duplicate(dummy_npc)	Building materials#hms04	4_WOODPILE
wolfvill,164,251,1	duplicate(dummy_npc)	Building materials#hms05	4_BRICKPILE

wolfvill,154,217,3	script	Sarana#cmm01	4_EP18_GW_WOMAN01,{
	mes "[Sarana]";
	mes "Here mainly corn and soybeans are planted.";
	mes "It grows well no matter how you plant it. You just need to fertilize it well.";
	next;
	mes "[Sarana]";
	mes "Potatoes also grow steadily, but other than that...";
	mes "Ha... I want to eat food made from wheat.";
	close;
}

wolfvill,146,131,1	duplicate(dummy_npc)	Village child#cmm01	4_EP18_GW_CHILD02

wolfvill,192,146,3	script	Oha#cmm01	4_EP18_GW_MIDDLE01,{
	mes "[Oha]";
	mes "Will this be enough for 35 people? I can't get enough of it even if I cook it every day.";
	close;
}

wolfvill,123,162,7	script	Zen#cmm01	4_EP18_GW_OLD02,{
	mes "[Zen]";
	mes "Just keep it safe so that the primordial fire does not devour this village and forest...";
	close;
}

wolfvill,38,243,5	duplicate(dummy_npc)	#con_admin	CLEAR_NPC

wolfvill,188,140,7	script	Casule#village	4_EP18_GW_CHILD01,{
	mes "[Casule]";
	mes "Hey... it smells delicious.";
	mes "I will wait here until it boils.";
	next;
	mes "[Casule]";
	mes "What if I'm late and I don't have my share?";
	mes "I'm going to wait in line here and eat first.";
	close;
}

wolfvill,202,130,7	script	Hyyares#villager	4_EP18_GW_WOMAN02,{
	mes "[Hyyares]";
	mes "This is a valuable storage container. You must not touch it as it is still ripening.";
	next;
	mes "[Hyyares]";
	mes "It's a fermented food made from fermented species handed down from the days of my grandfather.";
	mes "Actually, I don't like it very much because it smells so stinky.";
	close;
}

wolfvill,224,230,3	script	Director#villager	4_EP18_GW_CHILD02,{
	mes "[Director]";
	mes "You can't go into the water? Why?";
	next;
	mes "[Director]";
	mes "You look so warm and comfortable... I want to play in the water.";
	mes "If you're playing with the wind, you'll soon be full of ash.";
	close;
}


gw_fild01,147,137,2	script	Baby Grey Wolf#wms04	EP18_GREY_WOLF_BABY,{
	end;
OnMove:
	while(1) {
		switch( .move ) {
		case 0:
			.val = !.val;
			setarray .@a[0],147,137;
			setarray .@b[0],147,138;
			break;
		case 1:
			setarray .@a[0],148,127;
			setarray .@b[0],147,127;
			break;
		case 2:
			setarray .@a[0],159,115;
			setarray .@b[0],160,115;
			break;
		case 3:
			setarray .@a[0],159,104;
			setarray .@b[0],160,104;
			break;
		case 4:
			setarray .@a[0],159,93;
			setarray .@b[0],160,93;
			break;
		case 5:
			setarray .@a[0],160,82;
			setarray .@b[0],161,82;
			break;
		case 6:
			.val = !.val;
			setarray .@a[0],161,71;
			setarray .@b[0],162,71;
			break;
		}
		.move = .move + .sens[.val];
		unitwalk getnpcid(0),.@a[0],.@a[1];
		unitwalk getnpcid(0,"Goat#wms03"),.@b[0],.@b[1];
		sleep 6000;
	}
	end;
OnInit:
	npcspeed 300;
	setarray .sens[0],1,-1;
	.move = 1;
	donpcevent strnpcinfo(0) + "::OnMove";
	end;
}

gw_fild01,147,138,15	script	Goat#wms03	EP18_GREY_GOAT,{
	end;
OnInit:
	npcspeed 300;
	end;
}


//-------------------------------------------------------------------
// Dummy NPCs (need to check the dialog)
//-------------------------------------------------------------------
// rachel,67,134,8	duplicate(dummy_cloaked_npc)	Guest#E18_8	4_M_OLDSCHOLAR
// rachel,114,66,2	duplicate(dummy_npc)	Flower Lady#E18_9	4_F_GODEMOM
// rachel,55,106,6	duplicate(dummy_npc)	Telling#E18_D6	4_F_07	// an old npc already exists at this location

rachel,135,208,6	duplicate(dummy_npc)	Physics#E18_D1	4_F_MASK
rachel,163,196,4	duplicate(dummy_npc)	Molly#E18_D2	4_F_MASK1
rachel,31,89,6	duplicate(dummy_npc)	Tiling#E18_D5	4_F_02


//-------------------------------------------------------------------
// Merchants NPCs
//-------------------------------------------------------------------

// Storage and unlock reputation feature
wolfvill,167,135,3	script	Assad#asad	4_EP18_GW_MAN01,{
	if (checkweight(1201,1) == 0) {
		mes "- Wait a minute !! -";
		mes "- Currently you're carrying -";
		mes "- too many items with you. -";
		mes "- Please try again -";
		mes "- after you loose some weight. -";
		close;
	}
	if (ep18_1_main < 38) {
		mes "[Assad]";
		mes "" + strcharinfo(0) + ", it's a face I haven't seen in a while.";
		mes "Come to me when you get used to the village.";
		mes "I'll take care of this and that.";
		next;
		mes "[Assad]";
		mes "But it should be enough to attend the ^4d4dffconference^000000.";
		mes "It's not a favor to anyone.";
		next;
		mes "[Assad]";
		mes "If you look closely, there will be places where you need a hand.";
		mes "If you help out a little, you will build up a level between people, right?";
		mes "Try hard";
		close;
	}
	if (ep18_1_reputation_exp >= 3000) {
		mes "[Assad]";
		mes "Welcome, my wolf-like " + strcharinfo(0) + ".";
		mes "What do you need?";
		mes "Oh, I've been looking for a better smelting box.";
		mes "Would you like to exchange it for amethyst?";
	}
	else {
		mes "[Assad]";
		mes "Welcome, " + strcharinfo(0) + ".";
		mes "Would you like to organize your luggage?";
		mes "Or I'm in business, would you like to see some stuff?";
	}
	next;
	.@amethyst_name$ = getitemname(1000405);
	if (ep18_1_reputation_exp >= 4000)
		.@menu$[2] = "Exchange Smelting Box for " + .@amethyst_name$;
	else if (ep18_1_reputation_exp >= 3000)
		.@menu$[1] = "Exchange Smelting Box for " + .@amethyst_name$;
	if (ep18_1_reputation_exp >= 2000)
		.@menu$[0] = "Request space movement.";
	switch( select( "Use the warehouse", "Use the store", .@menu$[0], .@menu$[1], .@menu$[2] ) ) {
	case 1:
		mes "[Assad]";
		mes "The warehouse fee is 200z.";
		mes "Which warehouse would you like to open?";
		next;
		switch( select( "Warehouse #1", "" ) ) {
		// switch( select( "Warehouse #1", "Warehouse #2" ) ) {
		case 1:
			if (Zeny < 200)
				end;
			Zeny -= 200;
			mes "[Assad]";
			mes "Come on, I'll open the warehouse.";
			mes "Use it well.";
			close2;
			openstorage();
			end;
		case 2:
			end;
		}
		break;
	case 2:
		mes "[Assad]";
		mes "Do you want to sell your belongings?";
		next;
		switch( select( "Open the store", "Sell your belongings." ) ) {
		case 1:
			close2;
			callshop "Tool Dealer#wolf",1;
			end;
		case 2:
			close2;
			callshop "Tool Dealer#wolf",2;
			end;
		}
		end;
	case 3:
		mes "[Assad]";
		mes "Do you want to teleport to Rachel for 1 " + .@amethyst_name$ + " ?";
		next;
		if (select( "No", "Yes" ) == 1)
			end;
		if (countitem(1000405) < 1) {
			mes "[Assad]";
			mes "You don't have enough material.";
			close;
		}
		delitem 1000405,1;	// Ep18_Amethyst_Fragment
		warp "rachel",115,125;
		end;
	case 4:
		mes "[Assad]";
		mes "Amethyst shop?";
		mes "You can exchange them for a smelting box..";
		close2;
		callshop "shop_Ep18_1",1;
		end;
	case 5:
		mes "[Assad]";
		mes "Amethyst shop?";
		mes "You can exchange them for a smelting box..";
		close2;
		callshop "shop_Ep18_2",1;
		end;
	}
	end;
}

// (custom tool dealer)
-	shop	Tool Dealer#wolf	-1,611:-1,1750:-1,501:-1,502:-1,503:-1,504:-1,506:-1,645:-1,656:-1,601:-1,602:-1,1065:-1,2239:-1

// Greywolf enchant
// The item enchant part is a custom adaptation until rAthena implement the UI
wolfvill,164,137,3	script	Emmett#emet	4_EP18_GW_WOMAN01,{
	if (ep18_1_main < 38)
		end;
	disable_items;
	mes "[Emmett]";
	mes "Hello";
	mes "Do you have <ITEM>[Amethyst Fragment]<INFO>1000405</INFO></ITEM>?";
	mes "We are collecting amethyst.";
	next;
	mes "[Emmett]";
	mes "I can provide you powerful crafted ^4d4dff armor and enchantment^000000.";
	mes "What would you like to do?";
	next;
	switch( select( "Exchange Armor", "Greywolf Enchant" ) ) {
	case 1:
		mes "[Emmett]";
		mes "Did you collect a lot of amethyst fragments as promised?";
		mes "Look.";
		close2;
		callshop "shop_Ep18_Amethyst_to_Gray_W",1;
		end;
	case 2:
		mes "[Emmett]";
		mes "Choose the part you want to enchant.";
		next;
		/*
		// official system. Requires the new enchant UI
		switch( select( "Armor", "Things to wear", "Shoes", "Right Trinket", "Left(L) Trinket" ) ) {
		case 1:
			mes "[Emmett]";
			mes "You are enchanting armor.";
			close2;
			// open enchantment system UI
			end;
		case 2:
			mes "[Emmett]";
			mes "You are enchanting things to wear.";
			close2;
			// open enchantment system UI
			end;
		case 3:
			mes "[Emmett]";
			mes "Enchant shoesYou are giving it.";
			close2;
			// open enchantment system UI
			end;
		case 4:
			mes "[Emmett]";
			mes "You're giving the right accessory an enchantment.";
			close2;
			// open enchantment system UI
			end;
		case 5:
			mes "[Emmett]";
			mes "You are enchanting the ornament on the left.";
			close2;
			// open enchantment system UI
			end;
		}
		end;
		*/
		// custom system until the new enchant UI is supported
		switch( select( "Armor", "Garment", "Shoes", "Right Accessory", "Left Accessory" ) ) {
		case 1:
			.@part = EQI_ARMOR;
			break;
		case 2:
			.@part = EQI_GARMENT;
			break;
		case 3:
			.@part = EQI_SHOES;
			break;
		case 4:
			.@part = EQI_ACC_R;
			break;
		case 5:
			.@part = EQI_ACC_L;
			break;
		}
		callsub( S_Check, .@part );

		switch( select( "General Enchant", "Perfect Enchant", "Upgrade Enchant", "Reset Enchant" ) ) {
		case 1:
			.@item_id = callsub( S_Check, .@part );

			.@card[1] = getequipcardid(.@part,1);
			.@card[2] = getequipcardid(.@part,2);
			.@card[3] = getequipcardid(.@part,3);

			if (.@card[1] > 0) {
				mes "[Emmett]";
				mes "It cannot be enhanced anymore. Do you have anything else to enhance?";
				close;
			}
			if (.@card[3] == 0)
				.@slot_index = 3;
			else if (.@card[2] == 0)
				.@slot_index = 2;
			else
				.@slot_index = 1;
			.@enchant = callsub( S_Chance, .@item_id, .@slot_index );

			if (.@enchant == 0) {	// check if the system can return an enchant
				mes "[Emmett]";
				mes "It cannot be enhanced anymore. Do you have anything else to enhance?";
				close;
			}

			if (.@card[3] == 0) {
				mes "[Emmett]";
				mes "The 1st enchant cost:";
				mes "-> 100,000z and x15 " + getitemname(1000405) + "";
			}
			else if (.@card[2] == 0) {
				mes "[Emmett]";
				mes "The 2nd enchant cost:";
				mes "-> 150,000z and x25 " + getitemname(1000405) + "";
			}
			else {
				mes "[Emmett]";
				mes "The 3th enchant cost:";
				mes "-> 200,000z and x50 " + getitemname(1000405) + "";
			}
			mes "The chance of success is 100%.";
			next;
			if (select( "Enchant", "Quit" ) == 2)
				end;

			.@item_id = callsub( S_Check, .@part );

			setarray .@equip_bitmask[0],
				EQP_ACC_L,				// EQI_ACC_L
				EQP_ACC_R,				// EQI_ACC_R
				EQP_SHOES,				// EQI_SHOES
				EQP_GARMENT,			// EQI_GARMENT
				EQP_HEAD_LOW,			// EQI_HEAD_LOW
				EQP_HEAD_MID,			// EQI_HEAD_MID
				EQP_HEAD_TOP,			// EQI_HEAD_TOP
				EQP_ARMOR,				// EQI_ARMOR
				EQP_HAND_L,				// EQI_HAND_L
				EQP_HAND_R,				// EQI_HAND_R
				EQP_COSTUME_HEAD_TOP,	// EQI_COSTUME_HEAD_TOP
				EQP_COSTUME_HEAD_MID,	// EQI_COSTUME_HEAD_MID
				EQP_COSTUME_HEAD_LOW,	// EQI_COSTUME_HEAD_LOW
				EQP_COSTUME_GARMENT,	// EQI_COSTUME_GARMENT
				EQP_AMMO,				// EQI_AMMO
				EQP_SHADOW_ARMOR,		// EQI_SHADOW_ARMOR
				EQP_SHADOW_WEAPON,		// EQI_SHADOW_WEAPON
				EQP_SHADOW_SHIELD,		// EQI_SHADOW_SHIELD
				EQP_SHADOW_SHOES,		// EQI_SHADOW_SHOES
				EQP_SHADOW_ACC_R,		// EQI_SHADOW_ACC_R
				EQP_SHADOW_ACC_L;		// EQI_SHADOW_ACC_L

			getinventorylist;	// required for now for getitembound4 to keep the enchant grade
			for ( .@i = 0; .@i < @inventorylist_count; ++.@i ) {
				if (.@item_id == @inventorylist_id[.@i] && (@inventorylist_equip[.@i] & .@equip_bitmask[.@part]))
					break;
			}
			if (.@i == @inventorylist_count) {
				mes "[Emmett]";
				mes "Something wrong happened.";
				close;
			}

			setarray .@card[0], @inventorylist_card1[.@i], @inventorylist_card2[.@i], @inventorylist_card3[.@i], @inventorylist_card4[.@i];

			if (.@card[3] == 0) {
				.@amount = 15;
				.@zeny = 100000;
				.@slot_index = 3;
			}
			else if (.@card[2] == 0) {
				.@amount = 25;
				.@zeny = 150000;
				.@slot_index = 2;
			}
			else if (.@card[1] == 0) {
				.@amount = 50;
				.@zeny = 200000;
				.@slot_index = 1;
			}
			else {
				mes "[Emmett]";
				mes "It cannot be enhanced anymore. Do you have anything else to enhance?";
				close;
			}

			if (countitem(1000405) < .@amount || Zeny < .@zeny) {
				mes "[Emmett]";
				mes "You don't have all the requirements.";
				if (.@card[3] == 0) {
					mes "The 3th enchant cost:";
					mes "-> 200,000z and x50 " + getitemname(1000405) + "";
				}
				else if (.@card[2] == 0) {
					mes "The 2nd enchant cost:";
					mes "-> 150,000z and x25 " + getitemname(1000405) + "";
				}
				else {
					mes "The 3th enchant cost:";
					mes "-> 200,000z and x50 " + getitemname(1000405) + "";
				}
				close;
			}

			.@enchant = callsub( S_Chance, .@item_id, .@slot_index );

			.@card[ .@slot_index ] = .@enchant;
			delitem 1000405,.@amount;
			Zeny -= .@zeny;
			delequip .@part;

			setarray .@opt_id[0], @inventorylist_option_id1[.@i], @inventorylist_option_id2[.@i], @inventorylist_option_id3[.@i], @inventorylist_option_id4[.@i], @inventorylist_option_id5[.@i];
			setarray .@opt_value[0], @inventorylist_option_value1[.@i], @inventorylist_option_value2[.@i], @inventorylist_option_value3[.@i], @inventorylist_option_value4[.@i], @inventorylist_option_value5[.@i];
			setarray .@opt_param[0], @inventorylist_option_parameter1[.@i], @inventorylist_option_parameter2[.@i], @inventorylist_option_parameter3[.@i], @inventorylist_option_parameter4[.@i], @inventorylist_option_parameter5[.@i];

			// this command is a workaround to keep the grade system
			// getitembound4( .@item_id,1,1,@inventorylist_refine[.@i],0,.@card[0],.@card[1],.@card[2],.@card[3],@inventorylist_bound[.@i],@inventorylist_enchantgrade[@i], .@opt_id, .@opt_value, .@opt_param );
			getitem3( .@item_id,1,1,@inventorylist_refine[.@i],0,.@card[0],.@card[1],.@card[2],.@card[3], .@opt_id, .@opt_value, .@opt_param );

			mes "[Emmett]";
			mes "Hum, it has been processed well. Check out the item.";
			close;
		case 2:
			.@item_id = callsub( S_Check, .@part );

			.@card[1] = getequipcardid(.@part,1);
			.@card[2] = getequipcardid(.@part,2);
			.@card[3] = getequipcardid(.@part,3);

			if (.@card[1] > 0) {
				mes "[Emmett]";
				mes "It cannot be enhanced anymore. Do you have anything else to enhance?";
				close;
			}
			if (.@card[3] == 0)
				.@slot_index = 3;
			else if (.@card[2] == 0)
				.@slot_index = 2;
			else
				.@slot_index = 1;

			if (.@slot_index != 1) {
				mes "[Emmett]";
				mes "THe perfect enchant can only be applied on slot 1 (last enchant).";
				close;
			}

			switch( .@item_id ) {
			case 450177:	// Gray Wolf Suit [1]
			case 450178:	// Gray Wolf Robe [1]
				setarray .@perfect[0],
					310513,	// Wolf Orb (Reflection Reject) Lv3
					310514,	// Wolf Orb (Power Force)
					310516,	// Wolf Orb (Dragonic Breath)
					310517,	// Wolf Orb (Cutter Break)
					310518,	// Wolf Orb (Hundred Wave)
					310519,	// Wolf Orb (Brand Drive)
					310520,	// Wolf Orb (Vanishing Cannon)
					310521,	// Wolf Orb (Genesis Pressure)
					310522,	// Wolf Orb (Boost Cannon)
					310523,	// Wolf Orb (Vulcan Boomerang)
					310524,	// Wolf Orb (Tornado Swing)
					310525,	// Wolf Orb (Hell Tornado)
					310526,	// Wolf Orb (Crazy Cannon)
					310527,	// Wolf Orb (Acid Explosion)
					310528,	// Wolf Orb (Sonic Impact)
					310529,	// Wolf Orb (Cutter Slasher)
					310530,	// Wolf Orb (Berserk Slash)
					310531,	// Wolf Orb (Fatal Attack)
					310532,	// Wolf Orb (Shadow Spell)
					310533,	// Wolf Orb (Angle Shot)
					310534,	// Wolf Orb (Crimson Strain)
					310535,	// Wolf Orb (Jack Lightning)
					310536,	// Wolf Orb (Comet Vortex)
					310537,	// Wolf Orb (Cloud Buster)
					310538,	// Wolf Orb (Varetyr Wave)
					310539,	// Wolf Orb (Diamond Grave)
					310540,	// Wolf Orb (Magnusmus)
					310541,	// Wolf Orb (Holy Judex)
					310542,	// Wolf Orb (Melee Duple)
					310543,	// Wolf Orb (Tiger Empire)
					310544,	// Wolf Orb (Rampage Lightning)
					310545,	// Wolf Orb (Hell Arrow)
					310546,	// Wolf Orb (Cluster)
					310547,	// Wolf Orb (Breeze Shooting)
					310548,	// Wolf Orb (Aimed Storm)
					310549,	// Wolf Orb (Sound Metal)
					310550,	// Wolf Orb (Reverb)
					310551,	// Wolf Orb (Vulcan Severe)
					310552,	// Wolf Orb (Prominence Burst)
					310553,	// Wolf Orb (Moon Kick)
					310554,	// Wolf Orb (Flash Falling)
					310555,	// Wolf Orb (Eswhoo)
					310556,	// Wolf Orb (Espa)
					310557,	// Wolf Orb (Curse Explosion)
					310558,	// Wolf Orb (Des Hammer Dance)
					310559,	// Wolf Orb (Fire Howling Tail)
					310560,	// Wolf Orb (Storm Buster Trip)
					310561,	// Wolf Orb (Flame Ice Wind)
					310562,	// Wolf Orb (Cross Petal)
					310563,	// Wolf Orb (Exploding Flake Wind)
					310564,	// Wolf Orb (Power of Sea)
					310565,	// Wolf Orb (Power of Land)
					310566;	// Wolf Orb (Power of Life)
				break;

			case 480091:	// Gray Wolf Manteau [1]
			case 480090:	// Gray Wolf Muffler [1]
				setarray .@perfect[0],
					310581,	// Wolf Orb (Above All) Lv3
					310584,	// Wolf Orb (Powerful) Lv3
					310587;	// Wolf Orb (Mirror Counter) Lv3
				break;

			case 470087:	// Gray Wolf Boots [1]
			case 470088:	// Gray Wolf Shoes [1]
				setarray .@perfect[0],
					310609,	// Wolf Orb (Unlimited Vital)
					310610,	// Wolf Orb (Spell Buster)
					310611,	// Wolf Orb (Firing Shot)
					310612,	// Wolf Orb (Overpower)
					310613,	// Wolf Orb (Fatal Flash)
					310614;	// Wolf Orb (Lucky Strike)
				break;

			case 490106:	// Gray Wolf Pendant [1]
			case 490108:	// Gray Wolf Earring [1]
				setarray .@perfect[0],
					310630,	// Wolf Orb (Delay After Attack) Lv4
					310631,	// Wolf Orb (Expert Archer) Lv4
					310632,	// Wolf Orb (Fatal) Lv4
					310633,	// Wolf Orb (Fighting Spirit) Lv4
					310634,	// Wolf Orb (Spell) Lv4
					310643,	// Wolf Orb (Drain Life)
					310645,	// Wolf Orb (Magic Healing)
					310647;	// Wolf Orb (All Force)
				break;

			case 490107:	// Gray Wolf Ring [1]
			case 490109:	// Gray Wolf Necklace [1]
				setarray .@perfect[0],
					310630,	// Wolf Orb (Delay After Attack) Lv4
					310631,	// Wolf Orb (Expert Archer) Lv4
					310632,	// Wolf Orb (Fatal) Lv4
					310633,	// Wolf Orb (Fighting Spirit) Lv4
					310634,	// Wolf Orb (Spell) Lv4
					310644,	// Wolf Orb (Drain Soul)
					310646,	// Wolf Orb (Magic Soul)
					310647;	// Wolf Orb (All Force)
				break;

			default:
				break;
			}

			.@size = getarraysize(.@perfect);
			if (.@size == 0) {
				mes "[Emmett]";
				mes "It cannot be enhanced. Do you have anything else to enhance?";
				close;
			}
			mes "[Emmett]";
			mes "The 3th enchant cost:";
			mes "-> 10,000,000z and x2500 " + getitemname(1000405) + "";
			mes "The chance of success is 100%.";
			next;
			if (select( "Enchant", "Quit" ) == 2)
				end;

			if (.@item_id != callsub( S_Check, .@part )) {
				mes "[Emmett]";
				mes "Something wrong happened.";
				close;
			}

			mes "[Emmett]";
			mes "Possible enchants:";
			for ( .@i = 0; .@i < .@size; ++.@i ) {
				mes (.@i+1) + "/ <ITEM>" + getitemname(.@perfect[.@i]) + "<INFO>" + .@perfect[.@i] + "</INFO></ITEM>\n";
				// .@perfect_menu$ += getitemname(.@perfect[.@i]) + ":";	// the item name are not reliables (colon !)
			}
			input .@s;
			.@s = .@s - 1;
			next;
			// .@s = select(.@perfect_menu$) -1;
			if (.@s < 0 || .@s >= .@size) {
				mes "[Emmett]";
				mes "hmm..";
				close;
			}

			if (.@item_id != callsub( S_Check, .@part )) {
				mes "[Emmett]";
				mes "Something wrong happened.";
				close;
			}
			.@enchant = .@perfect[.@s];

			setarray .@equip_bitmask[0],
				EQP_ACC_L,				// EQI_ACC_L
				EQP_ACC_R,				// EQI_ACC_R
				EQP_SHOES,				// EQI_SHOES
				EQP_GARMENT,			// EQI_GARMENT
				EQP_HEAD_LOW,			// EQI_HEAD_LOW
				EQP_HEAD_MID,			// EQI_HEAD_MID
				EQP_HEAD_TOP,			// EQI_HEAD_TOP
				EQP_ARMOR,				// EQI_ARMOR
				EQP_HAND_L,				// EQI_HAND_L
				EQP_HAND_R,				// EQI_HAND_R
				EQP_COSTUME_HEAD_TOP,	// EQI_COSTUME_HEAD_TOP
				EQP_COSTUME_HEAD_MID,	// EQI_COSTUME_HEAD_MID
				EQP_COSTUME_HEAD_LOW,	// EQI_COSTUME_HEAD_LOW
				EQP_COSTUME_GARMENT,	// EQI_COSTUME_GARMENT
				EQP_AMMO,				// EQI_AMMO
				EQP_SHADOW_ARMOR,		// EQI_SHADOW_ARMOR
				EQP_SHADOW_WEAPON,		// EQI_SHADOW_WEAPON
				EQP_SHADOW_SHIELD,		// EQI_SHADOW_SHIELD
				EQP_SHADOW_SHOES,		// EQI_SHADOW_SHOES
				EQP_SHADOW_ACC_R,		// EQI_SHADOW_ACC_R
				EQP_SHADOW_ACC_L;		// EQI_SHADOW_ACC_L

			getinventorylist;	// required for now for getitembound4 to keep the enchant grade
			for ( .@i = 0; .@i < @inventorylist_count; ++.@i ) {
				if (.@item_id == @inventorylist_id[.@i] && (@inventorylist_equip[.@i] & .@equip_bitmask[.@part]))
					break;
			}
			if (.@i == @inventorylist_count) {
				mes "[Emmett]";
				mes "Something wrong happened.";
				close;
			}

			setarray .@card[0], @inventorylist_card1[.@i], @inventorylist_card2[.@i], @inventorylist_card3[.@i], @inventorylist_card4[.@i];

			if (.@card[1] > 0) {
				mes "[Emmett]";
				mes "It cannot be enhanced anymore. Do you have anything else to enhance?";
				close;
			}
			if (.@card[3] == 0)
				.@slot_index = 3;
			else if (.@card[2] == 0)
				.@slot_index = 2;
			else
				.@slot_index = 1;

			if (.@slot_index != 1) {
				mes "[Emmett]";
				mes "THe perfect enchant can only be applied on slot 1 (last enchant).";
				close;
			}

			.@amount = 2500;
			.@zeny = 10000000;
			.@slot_index = 1;

			if (countitem(1000405) < .@amount || Zeny < .@zeny) {
				mes "[Emmett]";
				mes "You don't have all the requirements.";
				mes "The 3th enchant cost:";
				mes "-> 10,000,000z and x2500 " + getitemname(1000405) + "";
				mes "The chance of success is 100%.";
				close;
			}

			.@card[ .@slot_index ] = .@enchant;
			delitem 1000405,.@amount;
			Zeny -= .@zeny;
			delequip .@part;

			setarray .@opt_id[0], @inventorylist_option_id1[.@i], @inventorylist_option_id2[.@i], @inventorylist_option_id3[.@i], @inventorylist_option_id4[.@i], @inventorylist_option_id5[.@i];
			setarray .@opt_value[0], @inventorylist_option_value1[.@i], @inventorylist_option_value2[.@i], @inventorylist_option_value3[.@i], @inventorylist_option_value4[.@i], @inventorylist_option_value5[.@i];
			setarray .@opt_param[0], @inventorylist_option_parameter1[.@i], @inventorylist_option_parameter2[.@i], @inventorylist_option_parameter3[.@i], @inventorylist_option_parameter4[.@i], @inventorylist_option_parameter5[.@i];

			// this command is a workaround to keep the grade system
			// getitembound4( .@item_id,1,1,@inventorylist_refine[.@i],0,.@card[0],.@card[1],.@card[2],.@card[3],@inventorylist_bound[.@i],@inventorylist_enchantgrade[@i], .@opt_id, .@opt_value, .@opt_param );
			getitem3( .@item_id,1,1,@inventorylist_refine[.@i],0,.@card[0],.@card[1],.@card[2],.@card[3], .@opt_id, .@opt_value, .@opt_param );

			mes "[Emmett]";
			mes "Hum, it has been processed well. Check out the item.";
			close;
		case 3:
			mes "[Emmett]";
			mes "The Gray Wolf enchants can't be upgraded. This section is left empty!";
			close;
		case 4:
			.@item_id = callsub( S_Check, .@part );

			.@card[1] = getequipcardid(.@part,1);
			.@card[2] = getequipcardid(.@part,2);
			.@card[3] = getequipcardid(.@part,3);

			if (.@card[1] == 0 && .@card[2] == 0 && .@card[3] == 0) {
				mes "[Emmett]";
				mes "There is nothing to reset.";
				close;
			}
			mes "[Emmett]";
			mes "The reset cost:";
			mes "-> 100,000z and x25 " + getitemname(1000405) + "";
			mes "The chance of success is 100%.";
			next;
			if (select( "Reset", "Quit" ) == 2)
				end;

			.@item_id = callsub( S_Check, .@part );

			setarray .@equip_bitmask[0],
				EQP_ACC_L,				// EQI_ACC_L
				EQP_ACC_R,				// EQI_ACC_R
				EQP_SHOES,				// EQI_SHOES
				EQP_GARMENT,			// EQI_GARMENT
				EQP_HEAD_LOW,			// EQI_HEAD_LOW
				EQP_HEAD_MID,			// EQI_HEAD_MID
				EQP_HEAD_TOP,			// EQI_HEAD_TOP
				EQP_ARMOR,				// EQI_ARMOR
				EQP_HAND_L,				// EQI_HAND_L
				EQP_HAND_R,				// EQI_HAND_R
				EQP_COSTUME_HEAD_TOP,	// EQI_COSTUME_HEAD_TOP
				EQP_COSTUME_HEAD_MID,	// EQI_COSTUME_HEAD_MID
				EQP_COSTUME_HEAD_LOW,	// EQI_COSTUME_HEAD_LOW
				EQP_COSTUME_GARMENT,	// EQI_COSTUME_GARMENT
				EQP_AMMO,				// EQI_AMMO
				EQP_SHADOW_ARMOR,		// EQI_SHADOW_ARMOR
				EQP_SHADOW_WEAPON,		// EQI_SHADOW_WEAPON
				EQP_SHADOW_SHIELD,		// EQI_SHADOW_SHIELD
				EQP_SHADOW_SHOES,		// EQI_SHADOW_SHOES
				EQP_SHADOW_ACC_R,		// EQI_SHADOW_ACC_R
				EQP_SHADOW_ACC_L;		// EQI_SHADOW_ACC_L

			getinventorylist;	// required for now for getitembound4 to keep the enchant grade
			for ( .@i = 0; .@i < @inventorylist_count; ++.@i ) {
				if (.@item_id == @inventorylist_id[.@i] && (@inventorylist_equip[.@i] & .@equip_bitmask[.@part]))
					break;
			}
			if (.@i == @inventorylist_count) {
				mes "[Emmett]";
				mes "Something wrong happened.";
				close;
			}

			setarray .@card[0], @inventorylist_card1[.@i], @inventorylist_card2[.@i], @inventorylist_card3[.@i], @inventorylist_card4[.@i];
			.@amount = 25;
			.@zeny = 100000;

			if (.@card[1] == 0 && .@card[2] == 0 && .@card[3] == 0) {
				mes "[Emmett]";
				mes "There is nothing to reset.";
				close;
			}
			if (countitem(1000405) < .@amount || Zeny < .@zeny) {
				mes "[Emmett]";
				mes "You don't have all the requirements.";
				mes "The reset cost:";
				mes "-> 100,000z and x25 " + getitemname(1000405) + "";
				close;
			}
			delitem 1000405,.@amount;
			Zeny -= .@zeny;
			delequip .@part;

			setarray .@opt_id[0], @inventorylist_option_id1[.@i], @inventorylist_option_id2[.@i], @inventorylist_option_id3[.@i], @inventorylist_option_id4[.@i], @inventorylist_option_id5[.@i];
			setarray .@opt_value[0], @inventorylist_option_value1[.@i], @inventorylist_option_value2[.@i], @inventorylist_option_value3[.@i], @inventorylist_option_value4[.@i], @inventorylist_option_value5[.@i];
			setarray .@opt_param[0], @inventorylist_option_parameter1[.@i], @inventorylist_option_parameter2[.@i], @inventorylist_option_parameter3[.@i], @inventorylist_option_parameter4[.@i], @inventorylist_option_parameter5[.@i];

			// this command is a workaround to keep the grade system
			// getitembound4( .@item_id,1,1,@inventorylist_refine[.@i],0,.@card[0],0,0,0,@inventorylist_bound[.@i],@inventorylist_enchantgrade[@i], .@opt_id, .@opt_value, .@opt_param );
			getitem3( .@item_id,1,1,@inventorylist_refine[.@i],0,.@card[0],0,0,0, .@opt_id, .@opt_value, .@opt_param );

			mes "[Emmett]";
			mes "Hum, it has been processed well. Check out the item.";
			close;
		}
	}
	end;

S_Check:
	.@part = getarg(0);
	.@item_id = getequipid(.@part);

	switch( .@item_id ) {
	case -1:
		mes "[Emmett]";
		mes "You must wear the item.";
		close;
	case 450177:	// Gray_W_Suits
	case 450178:	// Gray_W_Robe
	case 480091:	// Gray_W_Manteau
	case 480090:	// Gray_W_Muffler
	case 470087:	// Gray_W_Boots
	case 470088:	// Gray_W_Shoes
		if (getequiprefinerycnt(.@part) < 7) {
			mes "[Emmett]";
			mes "The equipment must be refined +7 or highter.";
			close;
		}
		break;
	case 490106:	// Gray_W_Pendant
	case 490108:	// Gray_W_Earing
	case 490107:	// Gray_W_Ring
	case 490109:	// Gray_W_Necklace
		break;
	default:
		mes "[Emmett]";
		mes "You must wear the item.";
		mes "This item is not supported by me.";
		close;
	}
	return .@item_id;

S_Chance:
	.@item_id = getarg(0);
	.@slot = getarg(1);
	.@type = getarg(2,0);

	switch( .@item_id ) {
	case 450177:	// Gray Wolf Suit [1]
	case 450178:	// Gray Wolf Robe [1]
		switch( .@slot ) {
		case 3:
			setarray .@enchant[0],
				310478, 990,	// Wolf Orb (Str) Lv1
				310479, 990,	// Wolf Orb (Dex) Lv1
				310480, 990,	// Wolf Orb (Agi) Lv1
				310481, 990,	// Wolf Orb (Int) Lv1
				310482, 990,	// Wolf Orb (Vit) Lv1
				310483, 990,	// Wolf Orb (Luk) Lv1
				310484, 250,	// Wolf Orb (Str) Lv2
				310485, 250,	// Wolf Orb (Dex) Lv2
				310486, 250,	// Wolf Orb (Agi) Lv2
				310487, 250,	// Wolf Orb (Int) Lv2
				310488, 250,	// Wolf Orb (Vit) Lv2
				310489, 250,	// Wolf Orb (Luk) Lv2
				310496, 990,	// Wolf Orb (Physical Defense) Lv1
				310497, 990,	// Wolf Orb (Magical Defense) Lv1
				310498, 250,	// Wolf Orb (Physical Defense) Lv2
				310499, 250,	// Wolf Orb (Magical Defense) Lv2
				310502, 23,	// Wolf Orb (Shooter) Lv1
				310503, 23,	// Wolf Orb (Warrior) Lv1
				310504, 23,	// Wolf Orb (Mage) Lv1
				310505, 3,	// Wolf Orb (Shooter) Lv2
				310506, 3,	// Wolf Orb (Warrior) Lv2
				310507, 3;	// Wolf Orb (Mage) Lv2
			break;

		case 2:
			setarray .@enchant[0],
				310478, 1000,	// Wolf Orb (Str) Lv1
				310479, 1000,	// Wolf Orb (Dex) Lv1
				310480, 1000,	// Wolf Orb (Agi) Lv1
				310481, 1000,	// Wolf Orb (Int) Lv1
				310482, 1000,	// Wolf Orb (Vit) Lv1
				310483, 1000,	// Wolf Orb (Luk) Lv1
				310484, 200,	// Wolf Orb (Str) Lv2
				310485, 200,	// Wolf Orb (Dex) Lv2
				310486, 200,	// Wolf Orb (Agi) Lv2
				310487, 200,	// Wolf Orb (Int) Lv2
				310488, 200,	// Wolf Orb (Vit) Lv2
				310489, 200,	// Wolf Orb (Luk) Lv2
				310490, 40,	// Wolf Orb (Str) Lv3
				310491, 40,	// Wolf Orb (Dex) Lv3
				310492, 40,	// Wolf Orb (Agi) Lv3
				310493, 40,	// Wolf Orb (Int) Lv3
				310494, 40,	// Wolf Orb (Vit) Lv3
				310495, 40,	// Wolf Orb (Luk) Lv3
				310496, 1000,	// Wolf Orb (Physical Defense) Lv1
				310497, 1000,	// Wolf Orb (Magical Defense) Lv1
				310498, 200,	// Wolf Orb (Physical Defense) Lv2
				310499, 200,	// Wolf Orb (Magical Defense) Lv2
				310500, 40,	// Wolf Orb (Physical Defense) Lv3
				310501, 40,	// Wolf Orb (Magical Defense) Lv3
				310502, 20,	// Wolf Orb (Shooter) Lv1
				310503, 20,	// Wolf Orb (Warrior) Lv1
				310504, 20,	// Wolf Orb (Mage) Lv1
				310505, 5,	// Wolf Orb (Shooter) Lv2
				310506, 5,	// Wolf Orb (Warrior) Lv2
				310507, 5,	// Wolf Orb (Mage) Lv2
				310508, 1,	// Wolf Orb (Shooter) Lv3
				310509, 1,	// Wolf Orb (Warrior) Lv3
				310510, 1,	// Wolf Orb (Mage) Lv3
				310515, 1;	// Wolf Orb (Delay After Skill)
			break;

		case 1:
			setarray .@enchant[0],
				310511, 185,	// Wolf Orb (Reflection Reject) Lv1
				310512, 50,	// Wolf Orb (Reflection Reject) Lv2
				310513, 10,	// Wolf Orb (Reflection Reject) Lv3
				310514, 188,	// Wolf Orb (Power Force)
				310516, 188,	// Wolf Orb (Dragonic Breath)
				310517, 188,	// Wolf Orb (Cutter Break)
				310518, 188,	// Wolf Orb (Hundred Wave)
				310519, 188,	// Wolf Orb (Brand Drive)
				310520, 188,	// Wolf Orb (Vanishing Cannon)
				310521, 188,	// Wolf Orb (Genesis Pressure)
				310522, 188,	// Wolf Orb (Boost Cannon)
				310523, 188,	// Wolf Orb (Vulcan Boomerang)
				310524, 188,	// Wolf Orb (Tornado Swing)
				310525, 188,	// Wolf Orb (Hell Tornado)
				310526, 188,	// Wolf Orb (Crazy Cannon)
				310527, 188,	// Wolf Orb (Acid Explosion)
				310528, 188,	// Wolf Orb (Sonic Impact)
				310529, 188,	// Wolf Orb (Cutter Slasher)
				310530, 188,	// Wolf Orb (Berserk Slash)
				310531, 188,	// Wolf Orb (Fatal Attack)
				310532, 188,	// Wolf Orb (Shadow Spell)
				310533, 188,	// Wolf Orb (Angle Shot)
				310534, 188,	// Wolf Orb (Crimson Strain)
				310535, 188,	// Wolf Orb (Jack Lightning)
				310536, 188,	// Wolf Orb (Comet Vortex)
				310537, 188,	// Wolf Orb (Cloud Buster)
				310538, 188,	// Wolf Orb (Varetyr Wave)
				310539, 188,	// Wolf Orb (Diamond Grave)
				310540, 188,	// Wolf Orb (Magnusmus)
				310541, 188,	// Wolf Orb (Holy Judex)
				310542, 188,	// Wolf Orb (Melee Duple)
				310543, 188,	// Wolf Orb (Tiger Empire)
				310544, 188,	// Wolf Orb (Rampage Lightning)
				310545, 188,	// Wolf Orb (Hell Arrow)
				310546, 188,	// Wolf Orb (Cluster)
				310547, 188,	// Wolf Orb (Breeze Shooting)
				310548, 188,	// Wolf Orb (Aimed Storm)
				310549, 188,	// Wolf Orb (Sound Metal)
				310550, 188,	// Wolf Orb (Reverb)
				310551, 188,	// Wolf Orb (Vulcan Severe)
				310552, 188,	// Wolf Orb (Prominence Burst)
				310553, 188,	// Wolf Orb (Moon Kick)
				310554, 188,	// Wolf Orb (Flash Falling)
				310555, 188,	// Wolf Orb (Eswhoo)
				310556, 188,	// Wolf Orb (Espa)
				310557, 188,	// Wolf Orb (Curse Explosion)
				310558, 188,	// Wolf Orb (Des Hammer Dance)
				310559, 188,	// Wolf Orb (Fire Howling Tail)
				310560, 188,	// Wolf Orb (Storm Buster Trip)
				310561, 188,	// Wolf Orb (Flame Ice Wind)
				310562, 188,	// Wolf Orb (Cross Petal)
				310563, 188,	// Wolf Orb (Exploding Flake Wind)
				310564, 188,	// Wolf Orb (Power of Sea)
				310565, 188,	// Wolf Orb (Power of Land)
				310566, 188;	// Wolf Orb (Power of Life)
			break;
		default:
			break;
		}
		break;

	case 480091:	// Gray Wolf Manteau [1]
	case 480090:	// Gray Wolf Muffler [1]
		switch( .@slot ) {
		case 3:
			setarray .@enchant[0],
				310478, 1367,	// Wolf Orb (Str) Lv1
				310479, 1367,	// Wolf Orb (Dex) Lv1
				310480, 1367,	// Wolf Orb (Agi) Lv1
				310481, 1367,	// Wolf Orb (Int) Lv1
				310482, 1367,	// Wolf Orb (Vit) Lv1
				310483, 1367,	// Wolf Orb (Luk) Lv1
				310484, 250,	// Wolf Orb (Str) Lv2
				310485, 250,	// Wolf Orb (Dex) Lv2
				310486, 250,	// Wolf Orb (Agi) Lv2
				310487, 250,	// Wolf Orb (Int) Lv2
				310488, 250,	// Wolf Orb (Vit) Lv2
				310489, 250,	// Wolf Orb (Luk) Lv2
				310490, 50,	// Wolf Orb (Str) Lv3
				310491, 50,	// Wolf Orb (Dex) Lv3
				310492, 50,	// Wolf Orb (Agi) Lv3
				310493, 50,	// Wolf Orb (Int) Lv3
				310494, 50,	// Wolf Orb (Vit) Lv3
				310495, 50;	// Wolf Orb (Luk) Lv3
			break;

		case 2:
			setarray .@enchant[0],
				310567, 2000,	// Wolf Orb (Speed) Lv1
				310568, 2000,	// Wolf Orb (Caster) Lv1
				310569, 2000,	// Wolf Orb (Critical) Lv1
				310570, 2000,	// Wolf Orb (Guide Attack) Lv1
				310571, 450,	// Wolf Orb (Speed) Lv2
				310572, 450,	// Wolf Orb (Caster) Lv2
				310573, 450,	// Wolf Orb (Critical) Lv2
				310574, 450,	// Wolf Orb (Guide Attack) Lv2
				310575, 50,	// Wolf Orb (Speed) Lv3
				310576, 50,	// Wolf Orb (Caster) Lv3
				310577, 50,	// Wolf Orb (Critical) Lv3
				310578, 50;	// Wolf Orb (Guide Attack) Lv3
			break;

		case 1:
			setarray .@enchant[0],
				310579, 3003,	// Wolf Orb (Above All) Lv1
				310580, 300,	// Wolf Orb (Above All) Lv2
				310581, 30,	// Wolf Orb (Above All) Lv3
				310582, 3003,	// Wolf Orb (Powerful) Lv1
				310583, 300,	// Wolf Orb (Powerful) Lv2
				310584, 30,	// Wolf Orb (Powerful) Lv3
				310585, 3003,	// Wolf Orb (Mirror Counter) Lv1
				310586, 300,	// Wolf Orb (Mirror Counter) Lv2
				310587, 30;	// Wolf Orb (Mirror Counter) Lv3
			break;
		default:
			break;
		}
		break;

	case 470087:	// Gray Wolf Boots [1]
	case 470088:	// Gray Wolf Shoes [1]
		switch( .@slot ) {
		case 3:
			setarray .@enchant[0],
				310588, 2150,	// Wolf Orb (Vital) Lv1
				310589, 2150,	// Wolf Orb (Mental) Lv1
				310590, 2150,	// Wolf Orb (Heal) Lv1
				310591, 300,	// Wolf Orb (Vital) Lv2
				310592, 300,	// Wolf Orb (Mental) Lv2
				310593, 300,	// Wolf Orb (Heal) Lv2
				310594, 50,	// Wolf Orb (Vital) Lv3
				310595, 50,	// Wolf Orb (Mental) Lv3
				310596, 50,	// Wolf Orb (Heal) Lv3
				310597, 2150,	// Wolf Orb (Robust) Lv1
				310598, 300,	// Wolf Orb (Robust) Lv2
				310599, 50;	// Wolf Orb (Robust) Lv3
			break;

		case 2:
			setarray .@enchant[0],
				310600, 3003,	// Wolf Orb (Fixed Casting) Lv1
				310601, 300,	// Wolf Orb (Fixed Casting) Lv2
				310602, 30,	// Wolf Orb (Fixed Casting) Lv3
				310603, 3003,	// Wolf Orb (Magical Force) Lv1
				310604, 3003,	// Wolf Orb (Physical Force) Lv1
				310605, 300,	// Wolf Orb (Magical Force) Lv2
				310606, 300,	// Wolf Orb (Physical Force) Lv2
				310607, 30,	// Wolf Orb (Magical Force) Lv3
				310608, 30;	// Wolf Orb (Physical Force) Lv3
			break;

		case 1:
			setarray .@enchant[0],
				310609, 1667,	// Wolf Orb (Unlimited Vital)
				310610, 1667,	// Wolf Orb (Spell Buster)
				310611, 1667,	// Wolf Orb (Firing Shot)
				310612, 1667,	// Wolf Orb (Overpower)
				310613, 1667,	// Wolf Orb (Fatal Flash)
				310614, 1667;	// Wolf Orb (Lucky Strike)
			break;
		default:
			break;
		}
		break;

	case 490106:	// Gray Wolf Pendant [1]
	case 490108:	// Gray Wolf Earring [1]
		switch( .@slot ) {
		case 3:
			setarray .@enchant[0],
				310486, 255,	// Wolf Orb (Agi) Lv2
				310487, 255,	// Wolf Orb (Int) Lv2
				310488, 255,	// Wolf Orb (Vit) Lv2
				310489, 255,	// Wolf Orb (Luk) Lv2
				310490, 50,	// Wolf Orb (Str) Lv3
				310491, 50,	// Wolf Orb (Dex) Lv3
				310492, 50,	// Wolf Orb (Agi) Lv3
				310493, 50,	// Wolf Orb (Int) Lv3
				310494, 50,	// Wolf Orb (Vit) Lv3
				310495, 50;	// Wolf Orb (Luk) Lv3
			break;

		case 2:
			setarray .@enchant[0],
				310624, 201,	// Wolf Orb (Spell) Lv2
				310625, 40,	// Wolf Orb (Delay After Attack) Lv3
				310626, 40,	// Wolf Orb (Expert Archer) Lv3
				310627, 40,	// Wolf Orb (Fatal) Lv3
				310628, 40,	// Wolf Orb (Fighting Spirit) Lv3
				310629, 40,	// Wolf Orb (Spell) Lv3
				310630, 5,	// Wolf Orb (Delay After Attack) Lv4
				310631, 5,	// Wolf Orb (Expert Archer) Lv4
				310632, 5,	// Wolf Orb (Fatal) Lv4
				310633, 5,	// Wolf Orb (Fighting Spirit) Lv4
				310634, 5,	// Wolf Orb (Spell) Lv4
				310635, 1380,	// Wolf Orb (HP Recovery) Lv1
				310636, 1380,	// Wolf Orb (SP Recovery) Lv1
				310637, 201,	// Wolf Orb (HP Recovery) Lv2
				310638, 201,	// Wolf Orb (SP Recovery) Lv2
				310639, 40,	// Wolf Orb (HP Recovery) Lv3
				310640, 40,	// Wolf Orb (SP Recovery) Lv3
				310641, 5,	// Wolf Orb (HP Recovery) Lv4
				310642, 5;	// Wolf Orb (SP Recovery) Lv4
			break;

		case 1:
			setarray .@enchant[0],
				310624, 200,	// Wolf Orb (Spell) Lv2
				310625, 40,	// Wolf Orb (Delay After Attack) Lv3
				310626, 40,	// Wolf Orb (Expert Archer) Lv3
				310627, 40,	// Wolf Orb (Fatal) Lv3
				310628, 40,	// Wolf Orb (Fighting Spirit) Lv3
				310629, 40,	// Wolf Orb (Spell) Lv3
				310630, 8,	// Wolf Orb (Delay After Attack) Lv4
				310631, 8,	// Wolf Orb (Expert Archer) Lv4
				310632, 8,	// Wolf Orb (Fatal) Lv4
				310633, 8,	// Wolf Orb (Fighting Spirit) Lv4
				310634, 8,	// Wolf Orb (Spell) Lv4
				310643, 360,	// Wolf Orb (Drain Life)
				310645, 360,	// Wolf Orb (Magic Healing)
				310647, 360;	// Wolf Orb (All Force)
			break;
		default:
			break;
		}
		break;

	case 490107:	// Gray Wolf Ring [1]
	case 490109:	// Gray Wolf Necklace [1]
		switch( .@slot ) {
		case 3:
			setarray .@enchant[0],
				310486, 255,	// Wolf Orb (Agi) Lv2
				310487, 255,	// Wolf Orb (Int) Lv2
				310488, 255,	// Wolf Orb (Vit) Lv2
				310489, 255,	// Wolf Orb (Luk) Lv2
				310490, 50,	// Wolf Orb (Str) Lv3
				310491, 50,	// Wolf Orb (Dex) Lv3
				310492, 50,	// Wolf Orb (Agi) Lv3
				310493, 50,	// Wolf Orb (Int) Lv3
				310494, 50,	// Wolf Orb (Vit) Lv3
				310495, 50;	// Wolf Orb (Luk) Lv3
			break;

		case 2:
			setarray .@enchant[0],
				310624, 201,	// Wolf Orb (Spell) Lv2
				310625, 40,	// Wolf Orb (Delay After Attack) Lv3
				310626, 40,	// Wolf Orb (Expert Archer) Lv3
				310627, 40,	// Wolf Orb (Fatal) Lv3
				310628, 40,	// Wolf Orb (Fighting Spirit) Lv3
				310629, 40,	// Wolf Orb (Spell) Lv3
				310630, 5,	// Wolf Orb (Delay After Attack) Lv4
				310631, 5,	// Wolf Orb (Expert Archer) Lv4
				310632, 5,	// Wolf Orb (Fatal) Lv4
				310633, 5,	// Wolf Orb (Fighting Spirit) Lv4
				310634, 5,	// Wolf Orb (Spell) Lv4
				310635, 1380,	// Wolf Orb (HP Recovery) Lv1
				310636, 1380,	// Wolf Orb (SP Recovery) Lv1
				310637, 201,	// Wolf Orb (HP Recovery) Lv2
				310638, 201,	// Wolf Orb (SP Recovery) Lv2
				310639, 40,	// Wolf Orb (HP Recovery) Lv3
				310640, 40,	// Wolf Orb (SP Recovery) Lv3
				310641, 5,	// Wolf Orb (HP Recovery) Lv4
				310642, 5;	// Wolf Orb (SP Recovery) Lv4
			break;

		case 1:
			setarray .@enchant[0],
				310616, 1920,	// Wolf Orb (Expert Archer) Lv1
				310617, 1920,	// Wolf Orb (Fatal) Lv1
				310618, 1920,	// Wolf Orb (Fighting Spirit) Lv1
				310619, 1920,	// Wolf Orb (Spell) Lv1
				310620, 200,	// Wolf Orb (Delay After Attack) Lv2
				310621, 200,	// Wolf Orb (Expert Archer) Lv2
				310622, 200,	// Wolf Orb (Fatal) Lv2
				310623, 200,	// Wolf Orb (Fighting Spirit) Lv2
				310624, 200,	// Wolf Orb (Spell) Lv2
				310625, 40,	// Wolf Orb (Delay After Attack) Lv3
				310626, 40,	// Wolf Orb (Expert Archer) Lv3
				310627, 40,	// Wolf Orb (Fatal) Lv3
				310628, 40,	// Wolf Orb (Fighting Spirit) Lv3
				310629, 40,	// Wolf Orb (Spell) Lv3
				310630, 8,	// Wolf Orb (Delay After Attack) Lv4
				310631, 8,	// Wolf Orb (Expert Archer) Lv4
				310632, 8,	// Wolf Orb (Fatal) Lv4
				310633, 8,	// Wolf Orb (Fighting Spirit) Lv4
				310634, 8,	// Wolf Orb (Spell) Lv4
				310644, 360,	// Wolf Orb (Drain Soul)
				310646, 360,	// Wolf Orb (Magic Soul)
				310647, 360;	// Wolf Orb (All Force)
			break;
		default:
			break;
		}
		break;

	default:
		return 0;
	}

	// to be accurate
	.@size = getarraysize(.@enchant);
	for ( .@i = 0; .@i < .@size; .@i += 2 )
		.@total += .@enchant[.@i+1];
	.@r = rand(.@total);

	for ( .@i = 0; .@i < .@size; .@i += 2 ) {
		.@current += .@enchant[.@i+1];
		if (.@r < .@current)
			break;
	}
	return .@enchant[.@i];
}

// item exchange
// The item reform part is a custom adaptation until rAthena implement the UI
wolfvill,170,131,3	script	Bamdat#bamdat	4_EP18_GW_OLD02,{
	if (ep18_1_main < 38)
		end;
	disable_items;
	mes "[Night Dart]";
	mes "The priest's villa has changed very strangely, hasn't it?";
	mes "The loot obtained there must also be filled with good beliefs.";
	next;
	mes "[Night Dart]";
	mes "If you wish, I will perform a purification ritual and turn it into a better weapon .";
	mes "My petty skills will be useful.";
	next;
	mes "[Night Dart]";
	mes "Choose between the ^4d4dffnormal purification ritual^000000, which has a lower the refine rate, and the ^4d4dffadvanced purification ritual^000000, which does not lower the refine rate that much.";
	next;
	mes "^4d4dff +9 Reforged Adulter Fides weapon series can be reformed into Vicatus Fides series.^000000";
	mes "^4d4dffThe refinement level varies depending on the selected purification ritual.^000000";
	next;
	/*
	// official dialog to open the item reform UI
	switch( select("General Purification Ritual", "Advanced Purification Ritual", "Stop" ) ) {
	case 1:
		mes "[Night Dart]";
		mes "God bless you.";
		close2;
		// open Item Reform UI
		end;
	case 2:
		mes "[Night Dart]";
		mes "God bless you.";
		close2;
		// open Item Reform UI
		end;
	case 3:
		end;
	}
	end;
	*/
	switch( select("General Purification Ritual", "Advanced Purification Ritual", "Stop" ) ) {
	case 1:
		setarray .@amount[0], 200,50,50,50,10;
		.@refine_cost = 5;
		break;
	case 2:
		setarray .@amount[0], 400,200,200,200,30;
		.@refine_cost = 1;
		break;
	case 3:
		end;
	}

	.@item_id = callsub( S_Check, EQI_HAND_R );

	switch( .@item_id ) {
	case 600017:
		.@req_id = 1000475;
		.@reward = 600018;
		break;
	case 630012:
		.@req_id = 1000476;
		.@reward = 630013;
		break;
	case 500025:
		.@req_id = 1000477;
		.@reward = 500027;
		break;
	case 530013:
		.@req_id = 1000478;
		.@reward = 530014;
		break;
	case 520008:
		.@req_id = 1000479;
		.@reward = 520009;
		break;
	case 590021:
		.@req_id = 1000480;
		.@reward = 590023;
		break;
	case 500026:
		.@req_id = 1000481;
		.@reward = 500028;
		break;
	case 590022:
		.@req_id = 1000482;
		.@reward = 590024;
		break;
	case 610020:
		.@req_id = 1000483;
		.@reward = 610022;
		break;
	case 610021:
		.@req_id = 1000484;
		.@reward = 610023;
		break;
	case 510032:
		.@req_id = 1000485;
		.@reward = 510033;
		break;
	case 700030:
		.@req_id = 1000486;
		.@reward = 700033;
		break;
	case 640019:
		.@req_id = 1000487;
		.@reward = 640021;
		break;
	case 640020:
		.@req_id = 1000488;
		.@reward = 640022;
		break;
	case 540019:
		.@req_id = 1000489;
		.@reward = 540024;
		break;
	case 540020:
		.@req_id = 1000490;
		.@reward = 540025;
		break;
	case 540021:
		.@req_id = 1000491;
		.@reward = 540026;
		break;
	case 550024:
		.@req_id = 1000492;
		.@reward = 550029;
		break;
	case 560018:
		.@req_id = 1000493;
		.@reward = 560020;
		break;
	case 560019:
		.@req_id = 1000494;
		.@reward = 560021;
		break;
	case 700031:
		.@req_id = 1000495;
		.@reward = 700034;
		break;
	case 700032:
		.@req_id = 1000496;
		.@reward = 700035;
		break;
	case 570017:
		.@req_id = 1000497;
		.@reward = 570019;
		break;
	case 580017:
		.@req_id = 1000498;
		.@reward = 580019;
		break;
	case 570018:
		.@req_id = 1000499;
		.@reward = 570020;
		break;
	case 580018:
		.@req_id = 1000500;
		.@reward = 580020;
		break;
	}

	mes "[Night Dart]";
	mes "^ff0000Refine Change: -" + .@refine_cost + "^000000";
	mes "Reforming your weapon to " + getitemname(.@reward) + " requires:";
	mes "-> x" + .@amount[0] + " " + getitemname(1000405) + "";
	mes "-> x" + .@amount[1] + " " + getitemname(1000501) + "";
	mes "-> x" + .@amount[2] + " " + getitemname(1000502) + "";
	mes "-> x" + .@amount[3] + " " + getitemname(1000503) + "";
	mes "-> x" + .@amount[4] + " " + getitemname(.@req_id) + "";
	mes "The chance of success is 100%.";
	next;
	if (select( "Reform", "Quit" ) == 2)
		end;

	if (.@item_id != callsub( S_Check, EQI_HAND_R )) {
		mes "[Night Dart]";
		mes "Something wrong happened.";
		close;
	}
	if (getequiprefinerycnt(EQI_HAND_R) < 9) {
		mes "[Night Dart]";
		mes "The weapon must be refined +9 or highter.";
		mes "^ff0000Refine Change: -" + .@refine_cost + "^000000";
		mes "Reforming your weapon to " + getitemname(.@reward) + " requires:";
		mes "-> x" + .@amount[0] + " " + getitemname(1000405) + "";
		mes "-> x" + .@amount[1] + " " + getitemname(1000501) + "";
		mes "-> x" + .@amount[2] + " " + getitemname(1000502) + "";
		mes "-> x" + .@amount[3] + " " + getitemname(1000503) + "";
		mes "-> x" + .@amount[4] + " " + getitemname(.@req_id) + "";
		mes "The chance of success is 100%.";
		close;
	}

	setarray .@equip_bitmask[0],
		EQP_ACC_L,				// EQI_ACC_L
		EQP_ACC_R,				// EQI_ACC_R
		EQP_SHOES,				// EQI_SHOES
		EQP_GARMENT,			// EQI_GARMENT
		EQP_HEAD_LOW,			// EQI_HEAD_LOW
		EQP_HEAD_MID,			// EQI_HEAD_MID
		EQP_HEAD_TOP,			// EQI_HEAD_TOP
		EQP_ARMOR,				// EQI_ARMOR
		EQP_HAND_L,				// EQI_HAND_L
		EQP_HAND_R,				// EQI_HAND_R
		EQP_COSTUME_HEAD_TOP,	// EQI_COSTUME_HEAD_TOP
		EQP_COSTUME_HEAD_MID,	// EQI_COSTUME_HEAD_MID
		EQP_COSTUME_HEAD_LOW,	// EQI_COSTUME_HEAD_LOW
		EQP_COSTUME_GARMENT,	// EQI_COSTUME_GARMENT
		EQP_AMMO,				// EQI_AMMO
		EQP_SHADOW_ARMOR,		// EQI_SHADOW_ARMOR
		EQP_SHADOW_WEAPON,		// EQI_SHADOW_WEAPON
		EQP_SHADOW_SHIELD,		// EQI_SHADOW_SHIELD
		EQP_SHADOW_SHOES,		// EQI_SHADOW_SHOES
		EQP_SHADOW_ACC_R,		// EQI_SHADOW_ACC_R
		EQP_SHADOW_ACC_L;		// EQI_SHADOW_ACC_L

	getinventorylist;	// required for now for getitembound4 to keep the enchant grade
	for ( .@i = 0; .@i < @inventorylist_count; ++.@i ) {
		if (.@item_id == @inventorylist_id[.@i] && (@inventorylist_equip[.@i] & .@equip_bitmask[EQI_HAND_R]))
			break;
	}
	if (.@i == @inventorylist_count) {
		mes "[Night Dart]";
		mes "Something wrong happened.";
		close;
	}

	setarray .@card[0], @inventorylist_card1[.@i], @inventorylist_card2[.@i], @inventorylist_card3[.@i], @inventorylist_card4[.@i];
	.@refine = @inventorylist_refine[.@i] - .@refine_cost;

	if (countitem(1000405) < .@amount[0] || countitem(1000501) < .@amount[1] || countitem(1000502) < .@amount[2] || countitem(1000503) < .@amount[3] || countitem(.@req_id) < .@amount[4]) {
		mes "[Night Dart]";
		mes "You don't have all the requirements.";
		mes "^ff0000Refine Change: -" + .@refine_cost + "^000000";
		mes "Reforming your weapon to " + getitemname(.@reward) + " requires:";
		mes "-> x" + .@amount[0] + " " + getitemname(1000405) + "";
		mes "-> x" + .@amount[1] + " " + getitemname(1000501) + "";
		mes "-> x" + .@amount[2] + " " + getitemname(1000502) + "";
		mes "-> x" + .@amount[3] + " " + getitemname(1000503) + "";
		mes "-> x" + .@amount[4] + " " + getitemname(.@req_id) + "";
		mes "The chance of success is 100%.";
		close;
	}
	delitem 1000405,.@amount[0];
	delitem 1000501,.@amount[1];
	delitem 1000502,.@amount[2];
	delitem 1000503,.@amount[3];
	delitem .@req_id,.@amount[4];

	delequip EQI_HAND_R;

	setarray .@opt_id[0], @inventorylist_option_id1[.@i], @inventorylist_option_id2[.@i], @inventorylist_option_id3[.@i], @inventorylist_option_id4[.@i], @inventorylist_option_id5[.@i];
	setarray .@opt_value[0], @inventorylist_option_value1[.@i], @inventorylist_option_value2[.@i], @inventorylist_option_value3[.@i], @inventorylist_option_value4[.@i], @inventorylist_option_value5[.@i];
	setarray .@opt_param[0], @inventorylist_option_parameter1[.@i], @inventorylist_option_parameter2[.@i], @inventorylist_option_parameter3[.@i], @inventorylist_option_parameter4[.@i], @inventorylist_option_parameter5[.@i];

	// this command is a workaround to keep the grade system
	// getitembound4( .@reward,1,1,.@refine,0,.@card[0],.@card[1],.@card[2],.@card[3],@inventorylist_bound[.@i],@inventorylist_enchantgrade[@i], .@opt_id, .@opt_value, .@opt_param );
	getitem3( .@reward,1,1,.@refine,0,.@card[0],.@card[1],.@card[2],.@card[3], .@opt_id, .@opt_value, .@opt_param );

	mes "[Night Dart]";
	mes "Hum, it has been processed well. Check out the item.";
	close;

S_Check:
	.@part = getarg(0);
	.@item_id = getequipid(.@part);

	switch( .@item_id ) {
	case -1:
		mes "[Night Dart]";
		mes "You must wear the item.";
		close;
	case 600017:
	case 630012:
	case 500025:
	case 530013:
	case 520008:
	case 590021:
	case 500026:
	case 590022:
	case 610020:
	case 610021:
	case 510032:
	case 700030:
	case 640019:
	case 640020:
	case 540019:
	case 540020:
	case 540021:
	case 550024:
	case 560018:
	case 560019:
	case 700031:
	case 700032:
	case 570017:
	case 580017:
	case 570018:
	case 580018:
		break;
	default:
		mes "[Night Dart]";
		mes "You must wear the item.";
		mes "This item is not supported by me.";
		close;
	}
	return .@item_id;

}
